# Generated by Django 2.2.13 on 2020-09-10 15:30

import django.core.validators
from django.db import migrations, models

import lego.utils.validators


def migrate_usernames(apps, schema_editor):
    userModel = apps.get_model("users", "User")
    for user in userModel.objects.filter(username__regex=r"^\w*[æøå]+\w*$"):
        new_username = (
            user.username.replace("ø", "o")
            .replace("Ø", "O")
            .replace("æ", "ae")
            .replace("Æ", "AE")
            .replace("å", "aa")
            .replace("Å", "AA")
        )
        suffix = 1
        while userModel.objects.filter(username=new_username).exists():
            new_username = f"${new_username}{suffix}"
            suffix += 1
        user.username = new_username
        user.save(update_fields=["username"])


class Migration(migrations.Migration):
    dependencies = [
        ("users", "0023_auto_20200311_2323"),
    ]

    operations = [
        migrations.RunPython(migrate_usernames, reverse_code=migrations.RunPython.noop),
        migrations.AlterField(
            model_name="user",
            name="student_username",
            field=models.CharField(
                error_messages={
                    "unique": "A user has already verified that student username."
                },
                help_text="30 characters or fewer. Letters, digits and _ only.",
                max_length=30,
                null=True,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[a-zA-Z0-9_]+$",
                        "Enter a valid username. This value may contain only letters, numbers and _ characters.",
                        "invalid",
                    ),
                    lego.utils.validators.ReservedNameValidator(),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                db_index=True,
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 50 characters or fewer. Letters, digits and _ only.",
                max_length=50,
                unique=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^[a-zA-Z0-9_]+$",
                        "Enter a valid username. This value may contain only letters, numbers and _ characters.",
                        "invalid",
                    ),
                    lego.utils.validators.ReservedNameValidator(),
                ],
            ),
        ),
    ]
